/*************** <auto-copyright.rb BEGIN do not edit this line> **************
 *
 * Copyright 2012-2013 by Ames Laboratory
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Library General Public
 * License version 2.1 as published by the Free Software Foundation.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Library General Public License for more details.
 *
 * You should have received a copy of the GNU Library General Public
 * License along with this library; if not, write to the
 * Free Software Foundation, Inc., 59 Temple Place - Suite 330,
 * Boston, MA 02111-1307, USA.
 *
 *************** <auto-copyright.rb END do not edit this line> ***************/


#pragma once

// --- LEAF Includes --- //
#include <leaf/open/soi/Component.h>

#include <leaf/util/SoilHelper.h>

// --- STL Includes --- //
#include <string>

namespace leaf
{
namespace wrapper
{
namespace rusle2
{

///CPD-SMR-RUSLE2\trunk\RUSLE2_App\Binaries\R2ImportNasis\importNasis.cpp
///Import of revision 1463 - 3/23/11
util::SoilError ReadNASISSoilData(
    open::soi::ComponentPtr const& component,
    std::string const& filePath );

///Convert the NASIS hydrologic class to the Rusle2 hydrologic class
///The NASIS classes are "A" - "D"
///This returns the highest class on error, to preserve existing functionality
std::string Rusle2HydrologicClass(
    std::string const& hydrologicClass );

///
std::string MakeElement(
    std::string const& pszName,
    std::string const& pszText );

///
std::string MakeTag(
    std::string const& pszName );

///
std::string MakeEnd(
    std::string const& pszName );

///Create an XML string for this attr and its data
///This is the same format generated by CAttr::SerializeXML()
///<pszTag> the element tag for this attr type (ex: "Flt", "Bol",...)
std::string AttrXML(
    std::string const& pszTag,
    std::string const& pszRusle2Name,
    Poco::Dynamic::Var const& pszValue,
    std::string const& pszDims,
    std::string const& pszUnit );

} //end rusle2
} //end wrapper
} //end leaf
